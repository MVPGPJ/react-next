{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport App, { Container } from 'next/app';\nimport Layout from '../components/Layout';\nimport 'antd/dist/antd.css';\nimport React from 'react';\n\nvar MyApp =\n/*#__PURE__*/\nfunction (_App) {\n  _inherits(MyApp, _App);\n\n  function MyApp() {\n    _classCallCheck(this, MyApp);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(MyApp).apply(this, arguments));\n  }\n\n  _createClass(MyApp, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          Component = _this$props.Component,\n          pageProps = _this$props.pageProps;\n      return React.createElement(Container, null, React.createElement(Layout, null, React.createElement(Component, pageProps)));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    // App组件的getInitialProps比较特殊\n    // 能拿到一些额外的参数\n    // Component: 被包裹的组件\n    value: function () {\n      var _getInitialProps = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(_ref) {\n        var Component, router, ctx, pageProps;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                Component = _ref.Component, router = _ref.router, ctx = _ref.ctx;\n                pageProps = {}; // 拿到Component上定义的getInitialProps\n\n                if (!Component.getInitialProps) {\n                  _context.next = 6;\n                  break;\n                }\n\n                _context.next = 5;\n                return Component.getInitialProps(ctx);\n\n              case 5:\n                pageProps = _context.sent;\n\n              case 6:\n                return _context.abrupt(\"return\", {\n                  pageProps: pageProps\n                });\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInitialProps(_x) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return MyApp;\n}(App);\n\nexport { MyApp as default };","map":{"version":3,"sources":["/Users/shanshihao/Project/next-github/pages/_app.js"],"names":["App","Container","Layout","React","MyApp","props","Component","pageProps","router","ctx","getInitialProps"],"mappings":";;;;;;;AAAA,OAAOA,GAAP,IAAcC,SAAd,QAA+B,UAA/B;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAO,oBAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;;IAEqBC,K;;;;;;;;;;;;;6BAmBV;AAAA,wBAC0B,KAAKC,KAD/B;AAAA,UACCC,SADD,eACCA,SADD;AAAA,UACYC,SADZ,eACYA,SADZ;AAEP,aACE,oBAAC,SAAD,QACE,oBAAC,MAAD,QAEE,oBAAC,SAAD,EAAeA,SAAf,CAFF,CADF,CADF;AAQD;;;AA5BD;AACA;AACA;;;;;;;;;;AAC+BD,gBAAAA,S,QAAAA,S,EAAWE,M,QAAAA,M,EAAQC,G,QAAAA,G;AAC5CF,gBAAAA,S,GAAY,E,EAEhB;;qBACID,SAAS,CAACI,e;;;;;;uBAEMJ,SAAS,CAACI,eAAV,CAA0BD,GAA1B,C;;;AAAlBF,gBAAAA,S;;;iDAIK;AACLA,kBAAAA,SAAS,EAATA;AADK,iB;;;;;;;;;;;;;;;;;;;EAdwBP,G;;SAAdI,K","sourcesContent":["import App, { Container } from 'next/app'\nimport Layout from '../components/Layout'\nimport 'antd/dist/antd.css'\nimport React from 'react'\n\nexport default class MyApp extends App {\n  // App组件的getInitialProps比较特殊\n  // 能拿到一些额外的参数\n  // Component: 被包裹的组件\n  static async getInitialProps({ Component, router, ctx }) {\n    let pageProps = {}\n\n    // 拿到Component上定义的getInitialProps\n    if (Component.getInitialProps) {\n      // 执行拿到返回结果\n      pageProps = await Component.getInitialProps(ctx)\n    }\n\n    // 返回给组件\n    return {\n      pageProps,\n    }\n  }\n\n  render() {\n    const { Component, pageProps } = this.props\n    return (\n      <Container>\n        <Layout>\n          {/* 把pageProps解构后传递给组件 */}\n          <Component {...pageProps} />\n        </Layout>\n      </Container>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}